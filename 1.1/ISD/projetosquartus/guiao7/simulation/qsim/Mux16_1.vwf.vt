// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/22/2023 09:17:08"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Mux16_1
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Mux16_1_vlg_vec_tst();
// constants                                           
// general purpose registers
reg EN_L;
reg I0;
reg I1;
reg I2;
reg I3;
reg I4;
reg I5;
reg I6;
reg I7;
reg I8;
reg I9;
reg I10;
reg I11;
reg I12;
reg I13;
reg I14;
reg I15;
reg S0;
reg S1;
reg S2;
reg S3;
// wires                                               
wire Y;

// assign statements (if any)                          
Mux16_1 i1 (
// port map - connection between master ports and signals/registers   
	.EN_L(EN_L),
	.I0(I0),
	.I1(I1),
	.I2(I2),
	.I3(I3),
	.I4(I4),
	.I5(I5),
	.I6(I6),
	.I7(I7),
	.I8(I8),
	.I9(I9),
	.I10(I10),
	.I11(I11),
	.I12(I12),
	.I13(I13),
	.I14(I14),
	.I15(I15),
	.S0(S0),
	.S1(S1),
	.S2(S2),
	.S3(S3),
	.Y(Y)
);
initial 
begin 
#1000000 $finish;
end 

// EN_L
initial
begin
	EN_L = 1'b0;
end 

// I15
initial
begin
	I15 = 1'b1;
	I15 = #90000 1'b0;
	I15 = #30000 1'b1;
	I15 = #90000 1'b0;
	I15 = #30000 1'b1;
	I15 = #30000 1'b0;
	I15 = #60000 1'b1;
	I15 = #30000 1'b0;
	I15 = #30000 1'b1;
	I15 = #180000 1'b0;
	I15 = #300000 1'b1;
	I15 = #30000 1'b0;
	I15 = #30000 1'b1;
	I15 = #30000 1'b0;
	I15 = #30000 1'b1;
end 

// I14
initial
begin
	I14 = 1'b1;
	I14 = #30000 1'b0;
	I14 = #120000 1'b1;
	I14 = #30000 1'b0;
	I14 = #120000 1'b1;
	I14 = #60000 1'b0;
	I14 = #30000 1'b1;
	I14 = #60000 1'b0;
	I14 = #30000 1'b1;
	I14 = #30000 1'b0;
	I14 = #30000 1'b1;
	I14 = #60000 1'b0;
	I14 = #30000 1'b1;
	I14 = #60000 1'b0;
	I14 = #90000 1'b1;
	I14 = #180000 1'b0;
end 

// I13
initial
begin
	I13 = 1'b0;
	I13 = #90000 1'b1;
	I13 = #60000 1'b0;
	I13 = #30000 1'b1;
	I13 = #30000 1'b0;
	I13 = #60000 1'b1;
	I13 = #90000 1'b0;
	I13 = #90000 1'b1;
	I13 = #30000 1'b0;
	I13 = #60000 1'b1;
	I13 = #90000 1'b0;
	I13 = #30000 1'b1;
	I13 = #30000 1'b0;
	I13 = #30000 1'b1;
	I13 = #60000 1'b0;
	I13 = #30000 1'b1;
	I13 = #30000 1'b0;
	I13 = #30000 1'b1;
	I13 = #30000 1'b0;
	I13 = #30000 1'b1;
end 

// I12
initial
begin
	I12 = 1'b0;
	I12 = #90000 1'b1;
	I12 = #30000 1'b0;
	I12 = #60000 1'b1;
	I12 = #60000 1'b0;
	I12 = #240000 1'b1;
	I12 = #60000 1'b0;
	I12 = #60000 1'b1;
	I12 = #60000 1'b0;
	I12 = #120000 1'b1;
	I12 = #60000 1'b0;
	I12 = #30000 1'b1;
	I12 = #120000 1'b0;
end 

// I11
initial
begin
	I11 = 1'b1;
	I11 = #30000 1'b0;
	I11 = #150000 1'b1;
	I11 = #30000 1'b0;
	I11 = #30000 1'b1;
	I11 = #150000 1'b0;
	I11 = #30000 1'b1;
	I11 = #60000 1'b0;
	I11 = #60000 1'b1;
	I11 = #30000 1'b0;
	I11 = #30000 1'b1;
	I11 = #30000 1'b0;
	I11 = #30000 1'b1;
	I11 = #120000 1'b0;
	I11 = #30000 1'b1;
	I11 = #60000 1'b0;
	I11 = #30000 1'b1;
	I11 = #90000 1'b0;
end 

// I10
initial
begin
	I10 = 1'b0;
	I10 = #30000 1'b1;
	I10 = #120000 1'b0;
	I10 = #60000 1'b1;
	I10 = #90000 1'b0;
	I10 = #90000 1'b1;
	I10 = #210000 1'b0;
	I10 = #60000 1'b1;
	I10 = #90000 1'b0;
	I10 = #30000 1'b1;
	I10 = #30000 1'b0;
	I10 = #30000 1'b1;
	I10 = #90000 1'b0;
	I10 = #30000 1'b1;
	I10 = #30000 1'b0;
end 

// I9
initial
begin
	I9 = 1'b0;
	I9 = #60000 1'b1;
	I9 = #30000 1'b0;
	I9 = #30000 1'b1;
	I9 = #30000 1'b0;
	I9 = #30000 1'b1;
	I9 = #90000 1'b0;
	I9 = #30000 1'b1;
	I9 = #30000 1'b0;
	I9 = #60000 1'b1;
	I9 = #30000 1'b0;
	I9 = #30000 1'b1;
	I9 = #30000 1'b0;
	I9 = #60000 1'b1;
	I9 = #30000 1'b0;
	I9 = #30000 1'b1;
	I9 = #60000 1'b0;
	I9 = #60000 1'b1;
	I9 = #90000 1'b0;
	I9 = #30000 1'b1;
	I9 = #60000 1'b0;
	I9 = #30000 1'b1;
	I9 = #30000 1'b0;
	I9 = #30000 1'b1;
end 

// I8
initial
begin
	I8 = 1'b1;
	I8 = #90000 1'b0;
	I8 = #30000 1'b1;
	I8 = #60000 1'b0;
	I8 = #30000 1'b1;
	I8 = #150000 1'b0;
	I8 = #30000 1'b1;
	I8 = #60000 1'b0;
	I8 = #120000 1'b1;
	I8 = #30000 1'b0;
	I8 = #30000 1'b1;
	I8 = #60000 1'b0;
	I8 = #60000 1'b1;
	I8 = #30000 1'b0;
	I8 = #30000 1'b1;
	I8 = #30000 1'b0;
	I8 = #60000 1'b1;
	I8 = #30000 1'b0;
	I8 = #30000 1'b1;
	I8 = #30000 1'b0;
end 

// I7
initial
begin
	I7 = 1'b0;
	I7 = #120000 1'b1;
	I7 = #90000 1'b0;
	I7 = #30000 1'b1;
	I7 = #120000 1'b0;
	I7 = #30000 1'b1;
	I7 = #30000 1'b0;
	I7 = #180000 1'b1;
	I7 = #30000 1'b0;
	I7 = #60000 1'b1;
	I7 = #30000 1'b0;
	I7 = #90000 1'b1;
	I7 = #30000 1'b0;
	I7 = #120000 1'b1;
	I7 = #30000 1'b0;
end 

// I6
initial
begin
	I6 = 1'b0;
	I6 = #30000 1'b1;
	I6 = #30000 1'b0;
	I6 = #120000 1'b1;
	I6 = #90000 1'b0;
	I6 = #60000 1'b1;
	I6 = #30000 1'b0;
	I6 = #60000 1'b1;
	I6 = #60000 1'b0;
	I6 = #60000 1'b1;
	I6 = #30000 1'b0;
	I6 = #60000 1'b1;
	I6 = #60000 1'b0;
	I6 = #60000 1'b1;
	I6 = #30000 1'b0;
	I6 = #30000 1'b1;
	I6 = #30000 1'b0;
	I6 = #30000 1'b1;
	I6 = #30000 1'b0;
	I6 = #60000 1'b1;
	I6 = #30000 1'b0;
end 

// I5
initial
begin
	I5 = 1'b1;
	I5 = #60000 1'b0;
	I5 = #60000 1'b1;
	I5 = #30000 1'b0;
	I5 = #90000 1'b1;
	I5 = #30000 1'b0;
	I5 = #60000 1'b1;
	I5 = #60000 1'b0;
	I5 = #30000 1'b1;
	I5 = #30000 1'b0;
	I5 = #30000 1'b1;
	I5 = #30000 1'b0;
	I5 = #30000 1'b1;
	I5 = #90000 1'b0;
	I5 = #30000 1'b1;
	I5 = #30000 1'b0;
	I5 = #30000 1'b1;
	I5 = #60000 1'b0;
	I5 = #30000 1'b1;
	I5 = #90000 1'b0;
	I5 = #30000 1'b1;
	I5 = #30000 1'b0;
end 

// I4
initial
begin
	I4 = 1'b0;
	I4 = #60000 1'b1;
	I4 = #30000 1'b0;
	I4 = #30000 1'b1;
	I4 = #30000 1'b0;
	I4 = #30000 1'b1;
	I4 = #30000 1'b0;
	I4 = #120000 1'b1;
	I4 = #90000 1'b0;
	I4 = #90000 1'b1;
	I4 = #30000 1'b0;
	I4 = #120000 1'b1;
	I4 = #90000 1'b0;
	I4 = #240000 1'b1;
end 

// I3
initial
begin
	I3 = 1'b1;
	I3 = #30000 1'b0;
	I3 = #30000 1'b1;
	I3 = #60000 1'b0;
	I3 = #30000 1'b1;
	I3 = #60000 1'b0;
	I3 = #60000 1'b1;
	I3 = #90000 1'b0;
	I3 = #30000 1'b1;
	I3 = #30000 1'b0;
	I3 = #150000 1'b1;
	I3 = #30000 1'b0;
	I3 = #120000 1'b1;
	I3 = #90000 1'b0;
	I3 = #30000 1'b1;
	I3 = #90000 1'b0;
	I3 = #30000 1'b1;
	I3 = #30000 1'b0;
end 

// I2
initial
begin
	I2 = 1'b1;
	I2 = #60000 1'b0;
	I2 = #30000 1'b1;
	I2 = #60000 1'b0;
	I2 = #30000 1'b1;
	I2 = #30000 1'b0;
	I2 = #30000 1'b1;
	I2 = #30000 1'b0;
	I2 = #90000 1'b1;
	I2 = #90000 1'b0;
	I2 = #180000 1'b1;
	I2 = #60000 1'b0;
	I2 = #30000 1'b1;
	I2 = #60000 1'b0;
	I2 = #30000 1'b1;
	I2 = #90000 1'b0;
	I2 = #60000 1'b1;
end 

// I1
initial
begin
	I1 = 1'b1;
	I1 = #30000 1'b0;
	I1 = #30000 1'b1;
	I1 = #30000 1'b0;
	I1 = #30000 1'b1;
	I1 = #30000 1'b0;
	I1 = #60000 1'b1;
	I1 = #60000 1'b0;
	I1 = #60000 1'b1;
	I1 = #60000 1'b0;
	I1 = #60000 1'b1;
	I1 = #30000 1'b0;
	I1 = #30000 1'b1;
	I1 = #30000 1'b0;
	I1 = #120000 1'b1;
	I1 = #60000 1'b0;
	I1 = #30000 1'b1;
	I1 = #150000 1'b0;
	I1 = #60000 1'b1;
	I1 = #30000 1'b0;
end 

// I0
initial
begin
	I0 = 1'b0;
	I0 = #60000 1'b1;
	I0 = #30000 1'b0;
	I0 = #30000 1'b1;
	I0 = #150000 1'b0;
	I0 = #30000 1'b1;
	I0 = #60000 1'b0;
	I0 = #60000 1'b1;
	I0 = #90000 1'b0;
	I0 = #30000 1'b1;
	I0 = #180000 1'b0;
	I0 = #30000 1'b1;
	I0 = #30000 1'b0;
	I0 = #30000 1'b1;
	I0 = #60000 1'b0;
	I0 = #30000 1'b1;
end 

// S3
initial
begin
	repeat(2)
	begin
		S3 = 1'b0;
		S3 = #240000 1'b1;
		# 240000;
	end
	S3 = 1'b0;
end 

// S2
initial
begin
	repeat(4)
	begin
		S2 = 1'b0;
		S2 = #120000 1'b1;
		# 120000;
	end
	S2 = 1'b0;
end 

// S1
initial
begin
	repeat(8)
	begin
		S1 = 1'b0;
		S1 = #60000 1'b1;
		# 60000;
	end
	S1 = 1'b0;
end 

// S0
initial
begin
	repeat(16)
	begin
		S0 = 1'b0;
		S0 = #30000 1'b1;
		# 30000;
	end
	S0 = 1'b0;
	S0 = #30000 1'b1;
end 
endmodule

