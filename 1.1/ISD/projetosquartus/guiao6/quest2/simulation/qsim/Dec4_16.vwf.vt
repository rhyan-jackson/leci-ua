// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/09/2023 17:43:54"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Dec4_16
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Dec4_16_vlg_vec_tst();
// constants                                           
// general purpose registers
reg EN;
reg [3:0] x;
// wires                                               
wire y0;
wire y1;
wire y2;
wire y3;
wire y4;
wire y5;
wire y6;
wire y7;
wire y8;
wire y9;
wire y10;
wire y11;
wire y12;
wire y13;
wire y14;
wire y15;

// assign statements (if any)                          
Dec4_16 i1 (
// port map - connection between master ports and signals/registers   
	.EN(EN),
	.x(x),
	.y0(y0),
	.y1(y1),
	.y2(y2),
	.y3(y3),
	.y4(y4),
	.y5(y5),
	.y6(y6),
	.y7(y7),
	.y8(y8),
	.y9(y9),
	.y10(y10),
	.y11(y11),
	.y12(y12),
	.y13(y13),
	.y14(y14),
	.y15(y15)
);
initial 
begin 
#1000000 $finish;
end 

// EN
initial
begin
	EN = 1'b1;
end 
// x[ 3 ]
initial
begin
	x[3] = 1'b0;
	x[3] = #320000 1'b1;
	x[3] = #320000 1'b0;
	x[3] = #320000 1'b1;
end 
// x[ 2 ]
initial
begin
	repeat(3)
	begin
		x[2] = 1'b0;
		x[2] = #160000 1'b1;
		# 160000;
	end
	x[2] = 1'b0;
end 
// x[ 1 ]
initial
begin
	repeat(6)
	begin
		x[1] = 1'b0;
		x[1] = #80000 1'b1;
		# 80000;
	end
	x[1] = 1'b0;
end 
// x[ 0 ]
initial
begin
	repeat(12)
	begin
		x[0] = 1'b0;
		x[0] = #40000 1'b1;
		# 40000;
	end
	x[0] = 1'b0;
end 
endmodule

