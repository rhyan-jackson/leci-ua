library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.NUMERIC_STD.all;

entity ShiftRegister_Demo is
	port(CLOCK_50    : in std_logic;
         SW    : in std_logic_vector(0 downto 0);
		 LEDG : out std_logic_vector(7 downto 0));
end ShiftRegister_Demo;

architecture Structural of ShiftRegister_Demo is
	signal sync_sw: std_logic;
	signal clk_1hz: std_logic;
begin
	process(CLOCK_50)
	begin
        if (rising_edge(CLOCK_50)) then
            sync_sw <= SW(0);
        end if;
    end process;

    clock_1hz : work.ClkDividerN(Behavioral)
            generic map(divFactor => 50_000_000)
            port(clkIn  => CLOCK_50,
                 clkOut => clk_1hz
            );

    shift_register : work.ShiftRegisterN(Behavioral)
            generic map(N => 8)
            port map(clk     => clk_1hz,
                     sIn     => sync_sw,
                     dataOut => LEDG(7 downto 0)
            );
end Structural;